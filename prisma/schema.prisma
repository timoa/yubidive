// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Boat {
  id          String         @id @default(uuid())
  name        String
  capacity    Int
  description String?
  imageUrl    String?
  status      String        @default("ACTIVE") // ACTIVE, INACTIVE, MAINTENANCE
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  schedules   BoatSchedule[]
}

model BoatSchedule {
  id            String    @id @default(uuid())
  startDateTime DateTime
  endDateTime   DateTime
  boat          Boat      @relation(fields: [boatId], references: [id])
  boatId        String
  bookings      Booking[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Booking {
  id            String       @id @default(uuid())
  status        String       @default("pending") // pending, confirmed, cancelled
  boatSchedule  BoatSchedule @relation(fields: [scheduleId], references: [id])
  scheduleId    String
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model User {
  id                    String    @id @default(uuid())
  email                 String    @unique
  password              String    // Hashed password for authentication
  name                  String
  role                  String    @default("customer") // customer, admin
  resetToken           String?   @unique
  resetTokenExpiresAt  DateTime?
  bookings             Booking[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}
